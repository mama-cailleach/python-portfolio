import csv
import os


def generate_lua_table_from_csv(csv_filepath, output_lua_filepath):
    """
    Reads card data from a CSV file and generates a Lua table file.

    Args:
        csv_filepath (str): Path to the input CSV file.
        output_lua_filepath (str): Path to the output Lua file.
    """
    card_data = {}

    try:
        with open(csv_filepath, mode='r', newline='', encoding='utf-8') as csvfile:
            reader = csv.DictReader(csvfile)
            for row in reader:
                card_name = row['Card Name'].strip()
                if not card_name:
                    continue  # Skip empty rows

                # Process Fortune Lines (separated by '|')
                upright_fortune_raw = row.get('Upright Fortune', '').strip()
                reversed_fortune_raw = row.get('Reversed Fortune', '').strip()

                upright_fortune_lines = [line.strip() for line in upright_fortune_raw.split('|') if line.strip()]
                reversed_fortune_lines = [line.strip() for line in reversed_fortune_raw.split('|') if line.strip()]

                # Process Keywords (separated by ';')
                upright_keywords_raw = row.get('Upright Keywords', '').strip()
                reversed_keywords_raw = row.get('Reversed Keywords', '').strip()

                upright_keywords = [kw.strip() for kw in upright_keywords_raw.split(';') if kw.strip()]
                reversed_keywords = [kw.strip() for kw in reversed_keywords_raw.split(';') if kw.strip()]

                # Process Correspondence (separated by ;)
                correspondence_raw = row.get('Correspondence', '').strip()

                correspondence = [kw.strip() for kw in correspondence_raw.split(';') if kw.strip()]

                card_entry = {
                    "upright_fortune": upright_fortune_lines,
                    "reversed_fortune": reversed_fortune_lines,
                    "upright_keywords": upright_keywords,
                    "reversed_keywords": reversed_keywords,
                    "correspondence": correspondence,
                }
                card_data[card_name] = card_entry

    except FileNotFoundError:
        print(f"Error: CSV file not found at {csv_filepath}")
        return
    except KeyError as e:
        print(f"Error: Missing expected column in CSV: {e}. Please check your CSV headers.")
        print(
            "Expected headers: 'Card Name', 'Upright Fortune', 'Reversed Fortune', 'Upright Keywords', 'Reversed Keywords', 'Correspondence'")
        return
    except Exception as e:
        print(f"An unexpected error occurred while reading CSV: {e}")
        return

    # Generate Lua table string
    lua_string = "-- This file is AUTOMATICALLY GENERATED by generate_card_data.py\n"
    lua_string += "-- DO NOT EDIT THIS FILE MANUALLY!\n\n"
    lua_string += "CARD_DATA = {\n"

    for name, data in card_data.items():
        lua_string += f'    ["{name}"] = {{\n'

        # Correspondence
        lua_string += '        correspondence = {'
        lua_string += ', '.join([f'"{kw}"' for kw in data["correspondence"]])
        lua_string += '},\n'

        # Keywords
        lua_string += '        upright_keywords = {'
        lua_string += ', '.join([f'"{kw}"' for kw in data["upright_keywords"]])
        lua_string += '},\n'

        lua_string += '        reversed_keywords = {'
        lua_string += ', '.join([f'"{kw}"' for kw in data["reversed_keywords"]])
        lua_string += '},\n'

        # Fortune
        lua_string += '        upright_fortune = {\n'
        lua_string += '            ' + ',\n            '.join([f'"{line}"' for line in data["upright_fortune"]]) + '\n'
        lua_string += '        },\n'

        lua_string += '        reversed_fortune = {\n'
        lua_string += '            ' + ',\n            '.join([f'"{line}"' for line in data["reversed_fortune"]]) + '\n'
        lua_string += '        },\n'

        lua_string += '    },\n'

    lua_string += "}\n\n"

    # Write to output file
    try:
        with open(output_lua_filepath, mode='w', encoding='utf-8') as lua_file:
            lua_file.write(lua_string)
        print(f"Successfully generated Lua data file: {output_lua_filepath}")
    except Exception as e:
        print(f"Error writing Lua file: {e}")


if __name__ == "__main__":
    script_dir = os.path.dirname(os.path.abspath(__file__))
    csv_file = os.path.join(script_dir, 'major_arcana_data.csv')
    lua_output_dir = os.path.join(script_dir, 'export')  # Adjust this path as needed!

    # Ensure the output directory exists
    os.makedirs(lua_output_dir, exist_ok=True)

    lua_file = os.path.join(lua_output_dir, 'cardDescriptions.lua')

    generate_lua_table_from_csv(csv_file, lua_file)
